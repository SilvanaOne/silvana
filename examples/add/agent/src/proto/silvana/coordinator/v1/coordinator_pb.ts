// @generated by protoc-gen-es v2.7.0 with parameter "target=ts,js_import_style=module"
// @generated from file silvana/coordinator/v1/coordinator.proto (package silvana.coordinator.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file silvana/coordinator/v1/coordinator.proto.
 */
export const file_silvana_coordinator_v1_coordinator: GenFile = /*@__PURE__*/
  fileDesc("CihzaWx2YW5hL2Nvb3JkaW5hdG9yL3YxL2Nvb3JkaW5hdG9yLnByb3RvEhZzaWx2YW5hLmNvb3JkaW5hdG9yLnYxIvwCCgNKb2ISFAoMam9iX3NlcXVlbmNlGAEgASgEEhgKC2Rlc2NyaXB0aW9uGAIgASgJSACIAQESEQoJZGV2ZWxvcGVyGAMgASgJEg0KBWFnZW50GAQgASgJEhQKDGFnZW50X21ldGhvZBgFIAEoCRILCgNhcHAYBiABKAkSFAoMYXBwX2luc3RhbmNlGAcgASgJEhsKE2FwcF9pbnN0YW5jZV9tZXRob2QYCCABKAkSGQoMYmxvY2tfbnVtYmVyGAkgASgESAGIAQESEQoJc2VxdWVuY2VzGAogAygEEhIKCnNlcXVlbmNlczEYCyADKAQSEgoKc2VxdWVuY2VzMhgMIAMoBBIMCgRkYXRhGA0gASgMEg4KBmpvYl9pZBgOIAEoCRIQCghhdHRlbXB0cxgPIAEoDRISCgpjcmVhdGVkX2F0GBAgASgEEhIKCnVwZGF0ZWRfYXQYESABKARCDgoMX2Rlc2NyaXB0aW9uQg8KDV9ibG9ja19udW1iZXIiWwoNR2V0Sm9iUmVxdWVzdBIRCglkZXZlbG9wZXIYASABKAkSDQoFYWdlbnQYAiABKAkSFAoMYWdlbnRfbWV0aG9kGAMgASgJEhIKCnNlc3Npb25faWQYBCABKAkiRwoOR2V0Sm9iUmVzcG9uc2USLQoDam9iGAEgASgLMhsuc2lsdmFuYS5jb29yZGluYXRvci52MS5Kb2JIAIgBAUIGCgRfam9iIjgKEkNvbXBsZXRlSm9iUmVxdWVzdBIOCgZqb2JfaWQYASABKAkSEgoKc2Vzc2lvbl9pZBgCIAEoCSI3ChNDb21wbGV0ZUpvYlJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSDwoHbWVzc2FnZRgCIAEoCSJLCg5GYWlsSm9iUmVxdWVzdBIOCgZqb2JfaWQYASABKAkSFQoNZXJyb3JfbWVzc2FnZRgCIAEoCRISCgpzZXNzaW9uX2lkGAMgASgJIjMKD0ZhaWxKb2JSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEg8KB21lc3NhZ2UYAiABKAkiOQoTVGVybWluYXRlSm9iUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgJEg4KBmpvYl9pZBgCIAEoCSI4ChRUZXJtaW5hdGVKb2JSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEg8KB21lc3NhZ2UYAiABKAkiugEKElN1Ym1pdFByb29mUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgJEhQKDGJsb2NrX251bWJlchgCIAEoBBIRCglzZXF1ZW5jZXMYAyADKAQSGgoSbWVyZ2VkX3NlcXVlbmNlc18xGAQgAygEEhoKEm1lcmdlZF9zZXF1ZW5jZXNfMhgFIAMoBBIOCgZqb2JfaWQYBiABKAkSDQoFcHJvb2YYByABKAkSEAoIY3B1X3RpbWUYCCABKAQiNwoTU3VibWl0UHJvb2ZSZXNwb25zZRIPCgd0eF9oYXNoGAEgASgJEg8KB2RhX2hhc2gYAiABKAkirgEKElN1Ym1pdFN0YXRlUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgJEhAKCHNlcXVlbmNlGAIgASgEEg4KBmpvYl9pZBgDIAEoCRIbCg5uZXdfc3RhdGVfZGF0YRgEIAEoDEgAiAEBEh0KEHNlcmlhbGl6ZWRfc3RhdGUYBSABKAlIAYgBAUIRCg9fbmV3X3N0YXRlX2RhdGFCEwoRX3NlcmlhbGl6ZWRfc3RhdGUiSAoTU3VibWl0U3RhdGVSZXNwb25zZRIPCgd0eF9oYXNoGAEgASgJEhQKB2RhX2hhc2gYAiABKAlIAIgBAUIKCghfZGFfaGFzaCKoAQoNU2VxdWVuY2VTdGF0ZRIQCghzZXF1ZW5jZRgBIAEoBBISCgVzdGF0ZRgCIAEoDEgAiAEBEh4KEWRhdGFfYXZhaWxhYmlsaXR5GAMgASgJSAGIAQESGAoQb3B0aW1pc3RpY19zdGF0ZRgEIAEoDBIXCg90cmFuc2l0aW9uX2RhdGEYBSABKAxCCAoGX3N0YXRlQhQKEl9kYXRhX2F2YWlsYWJpbGl0eSJQChhHZXRTZXF1ZW5jZVN0YXRlc1JlcXVlc3QSEgoKc2Vzc2lvbl9pZBgBIAEoCRIOCgZqb2JfaWQYAiABKAkSEAoIc2VxdWVuY2UYAyABKAQiUgoZR2V0U2VxdWVuY2VTdGF0ZXNSZXNwb25zZRI1CgZzdGF0ZXMYASADKAsyJS5zaWx2YW5hLmNvb3JkaW5hdG9yLnYxLlNlcXVlbmNlU3RhdGUiQgobUmVhZERhdGFBdmFpbGFiaWxpdHlSZXF1ZXN0Eg8KB2RhX2hhc2gYASABKAkSEgoKc2Vzc2lvbl9pZBgCIAEoCSJcChxSZWFkRGF0YUF2YWlsYWJpbGl0eVJlc3BvbnNlEhEKBGRhdGEYASABKAlIAIgBARIPCgdzdWNjZXNzGAIgASgIEg8KB21lc3NhZ2UYAyABKAlCBwoFX2RhdGEiXgoPR2V0UHJvb2ZSZXF1ZXN0EhIKCnNlc3Npb25faWQYASABKAkSFAoMYmxvY2tfbnVtYmVyGAIgASgEEhEKCXNlcXVlbmNlcxgDIAMoBBIOCgZqb2JfaWQYBCABKAkiYwoQR2V0UHJvb2ZSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEhIKBXByb29mGAIgASgJSACIAQESFAoHbWVzc2FnZRgDIAEoCUgBiAEBQggKBl9wcm9vZkIKCghfbWVzc2FnZSJQChRHZXRCbG9ja1Byb29mUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgJEhQKDGJsb2NrX251bWJlchgCIAEoBBIOCgZqb2JfaWQYAyABKAkidAoVR2V0QmxvY2tQcm9vZlJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSGAoLYmxvY2tfcHJvb2YYAiABKAlIAIgBARIUCgdtZXNzYWdlGAMgASgJSAGIAQFCDgoMX2Jsb2NrX3Byb29mQgoKCF9tZXNzYWdlIkkKFVJldHJpZXZlU2VjcmV0UmVxdWVzdBIOCgZqb2JfaWQYASABKAkSEgoKc2Vzc2lvbl9pZBgCIAEoCRIMCgRuYW1lGAMgASgJImYKFlJldHJpZXZlU2VjcmV0UmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBIPCgdtZXNzYWdlGAIgASgJEhkKDHNlY3JldF92YWx1ZRgDIAEoCUgAiAEBQg8KDV9zZWNyZXRfdmFsdWUyqAkKEkNvb3JkaW5hdG9yU2VydmljZRJXCgZHZXRKb2ISJS5zaWx2YW5hLmNvb3JkaW5hdG9yLnYxLkdldEpvYlJlcXVlc3QaJi5zaWx2YW5hLmNvb3JkaW5hdG9yLnYxLkdldEpvYlJlc3BvbnNlEmYKC0NvbXBsZXRlSm9iEiouc2lsdmFuYS5jb29yZGluYXRvci52MS5Db21wbGV0ZUpvYlJlcXVlc3QaKy5zaWx2YW5hLmNvb3JkaW5hdG9yLnYxLkNvbXBsZXRlSm9iUmVzcG9uc2USWgoHRmFpbEpvYhImLnNpbHZhbmEuY29vcmRpbmF0b3IudjEuRmFpbEpvYlJlcXVlc3QaJy5zaWx2YW5hLmNvb3JkaW5hdG9yLnYxLkZhaWxKb2JSZXNwb25zZRJpCgxUZXJtaW5hdGVKb2ISKy5zaWx2YW5hLmNvb3JkaW5hdG9yLnYxLlRlcm1pbmF0ZUpvYlJlcXVlc3QaLC5zaWx2YW5hLmNvb3JkaW5hdG9yLnYxLlRlcm1pbmF0ZUpvYlJlc3BvbnNlEmYKC1N1Ym1pdFByb29mEiouc2lsdmFuYS5jb29yZGluYXRvci52MS5TdWJtaXRQcm9vZlJlcXVlc3QaKy5zaWx2YW5hLmNvb3JkaW5hdG9yLnYxLlN1Ym1pdFByb29mUmVzcG9uc2USZgoLU3VibWl0U3RhdGUSKi5zaWx2YW5hLmNvb3JkaW5hdG9yLnYxLlN1Ym1pdFN0YXRlUmVxdWVzdBorLnNpbHZhbmEuY29vcmRpbmF0b3IudjEuU3VibWl0U3RhdGVSZXNwb25zZRJ4ChFHZXRTZXF1ZW5jZVN0YXRlcxIwLnNpbHZhbmEuY29vcmRpbmF0b3IudjEuR2V0U2VxdWVuY2VTdGF0ZXNSZXF1ZXN0GjEuc2lsdmFuYS5jb29yZGluYXRvci52MS5HZXRTZXF1ZW5jZVN0YXRlc1Jlc3BvbnNlEoEBChRSZWFkRGF0YUF2YWlsYWJpbGl0eRIzLnNpbHZhbmEuY29vcmRpbmF0b3IudjEuUmVhZERhdGFBdmFpbGFiaWxpdHlSZXF1ZXN0GjQuc2lsdmFuYS5jb29yZGluYXRvci52MS5SZWFkRGF0YUF2YWlsYWJpbGl0eVJlc3BvbnNlEl0KCEdldFByb29mEicuc2lsdmFuYS5jb29yZGluYXRvci52MS5HZXRQcm9vZlJlcXVlc3QaKC5zaWx2YW5hLmNvb3JkaW5hdG9yLnYxLkdldFByb29mUmVzcG9uc2USbAoNR2V0QmxvY2tQcm9vZhIsLnNpbHZhbmEuY29vcmRpbmF0b3IudjEuR2V0QmxvY2tQcm9vZlJlcXVlc3QaLS5zaWx2YW5hLmNvb3JkaW5hdG9yLnYxLkdldEJsb2NrUHJvb2ZSZXNwb25zZRJvCg5SZXRyaWV2ZVNlY3JldBItLnNpbHZhbmEuY29vcmRpbmF0b3IudjEuUmV0cmlldmVTZWNyZXRSZXF1ZXN0Gi4uc2lsdmFuYS5jb29yZGluYXRvci52MS5SZXRyaWV2ZVNlY3JldFJlc3BvbnNlQkNaQWdpdGh1Yi5jb20vU2lsdmFuYU9uZS96ay10ZXN0cy9wYWNrYWdlcy9hdnMvcnBjL3Byb3RvO2Nvb3JkaW5hdG9yYgZwcm90bzM", [file_google_protobuf_descriptor]);

/**
 * Job message matching the partial Move struct
 *
 * @generated from message silvana.coordinator.v1.Job
 */
export type Job = Message<"silvana.coordinator.v1.Job"> & {
  /**
   * @generated from field: uint64 job_sequence = 1;
   */
  jobSequence: bigint;

  /**
   * @generated from field: optional string description = 2;
   */
  description?: string;

  /**
   * Metadata of the agent method to call
   *
   * @generated from field: string developer = 3;
   */
  developer: string;

  /**
   * @generated from field: string agent = 4;
   */
  agent: string;

  /**
   * @generated from field: string agent_method = 5;
   */
  agentMethod: string;

  /**
   * Metadata of the calling app instance
   *
   * @generated from field: string app = 6;
   */
  app: string;

  /**
   * @generated from field: string app_instance = 7;
   */
  appInstance: string;

  /**
   * @generated from field: string app_instance_method = 8;
   */
  appInstanceMethod: string;

  /**
   * @generated from field: optional uint64 block_number = 9;
   */
  blockNumber?: bigint;

  /**
   * @generated from field: repeated uint64 sequences = 10;
   */
  sequences: bigint[];

  /**
   * @generated from field: repeated uint64 sequences1 = 11;
   */
  sequences1: bigint[];

  /**
   * @generated from field: repeated uint64 sequences2 = 12;
   */
  sequences2: bigint[];

  /**
   * @generated from field: bytes data = 13;
   */
  data: Uint8Array;

  /**
   * Generated unique job ID for agent reference
   *
   * @generated from field: string job_id = 14;
   */
  jobId: string;

  /**
   * Metadata of the job
   *
   * @generated from field: uint32 attempts = 15;
   */
  attempts: number;

  /**
   * Metadata of the job
   *
   * @generated from field: uint64 created_at = 16;
   */
  createdAt: bigint;

  /**
   * @generated from field: uint64 updated_at = 17;
   */
  updatedAt: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.Job.
 * Use `create(JobSchema)` to create a new message.
 */
export const JobSchema: GenMessage<Job> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 0);

/**
 * Request message for getting a job
 *
 * @generated from message silvana.coordinator.v1.GetJobRequest
 */
export type GetJobRequest = Message<"silvana.coordinator.v1.GetJobRequest"> & {
  /**
   * @generated from field: string developer = 1;
   */
  developer: string;

  /**
   * @generated from field: string agent = 2;
   */
  agent: string;

  /**
   * @generated from field: string agent_method = 3;
   */
  agentMethod: string;

  /**
   * @generated from field: string session_id = 4;
   */
  sessionId: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetJobRequest.
 * Use `create(GetJobRequestSchema)` to create a new message.
 */
export const GetJobRequestSchema: GenMessage<GetJobRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 1);

/**
 * Response message containing a job
 *
 * @generated from message silvana.coordinator.v1.GetJobResponse
 */
export type GetJobResponse = Message<"silvana.coordinator.v1.GetJobResponse"> & {
  /**
   * @generated from field: optional silvana.coordinator.v1.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message silvana.coordinator.v1.GetJobResponse.
 * Use `create(GetJobResponseSchema)` to create a new message.
 */
export const GetJobResponseSchema: GenMessage<GetJobResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 2);

/**
 * Request message for completing a job
 *
 * @generated from message silvana.coordinator.v1.CompleteJobRequest
 */
export type CompleteJobRequest = Message<"silvana.coordinator.v1.CompleteJobRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message silvana.coordinator.v1.CompleteJobRequest.
 * Use `create(CompleteJobRequestSchema)` to create a new message.
 */
export const CompleteJobRequestSchema: GenMessage<CompleteJobRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 3);

/**
 * Response message for job completion
 *
 * @generated from message silvana.coordinator.v1.CompleteJobResponse
 */
export type CompleteJobResponse = Message<"silvana.coordinator.v1.CompleteJobResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message silvana.coordinator.v1.CompleteJobResponse.
 * Use `create(CompleteJobResponseSchema)` to create a new message.
 */
export const CompleteJobResponseSchema: GenMessage<CompleteJobResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 4);

/**
 * Request message for failing a job
 *
 * @generated from message silvana.coordinator.v1.FailJobRequest
 */
export type FailJobRequest = Message<"silvana.coordinator.v1.FailJobRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;

  /**
   * @generated from field: string session_id = 3;
   */
  sessionId: string;
};

/**
 * Describes the message silvana.coordinator.v1.FailJobRequest.
 * Use `create(FailJobRequestSchema)` to create a new message.
 */
export const FailJobRequestSchema: GenMessage<FailJobRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 5);

/**
 * Response message for job failure
 *
 * @generated from message silvana.coordinator.v1.FailJobResponse
 */
export type FailJobResponse = Message<"silvana.coordinator.v1.FailJobResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message silvana.coordinator.v1.FailJobResponse.
 * Use `create(FailJobResponseSchema)` to create a new message.
 */
export const FailJobResponseSchema: GenMessage<FailJobResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 6);

/**
 * Request message for terminating a job
 *
 * @generated from message silvana.coordinator.v1.TerminateJobRequest
 */
export type TerminateJobRequest = Message<"silvana.coordinator.v1.TerminateJobRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string job_id = 2;
   */
  jobId: string;
};

/**
 * Describes the message silvana.coordinator.v1.TerminateJobRequest.
 * Use `create(TerminateJobRequestSchema)` to create a new message.
 */
export const TerminateJobRequestSchema: GenMessage<TerminateJobRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 7);

/**
 * Response message for terminating a job
 *
 * @generated from message silvana.coordinator.v1.TerminateJobResponse
 */
export type TerminateJobResponse = Message<"silvana.coordinator.v1.TerminateJobResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message silvana.coordinator.v1.TerminateJobResponse.
 * Use `create(TerminateJobResponseSchema)` to create a new message.
 */
export const TerminateJobResponseSchema: GenMessage<TerminateJobResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 8);

/**
 * Request message for submitting a proof
 *
 * @generated from message silvana.coordinator.v1.SubmitProofRequest
 */
export type SubmitProofRequest = Message<"silvana.coordinator.v1.SubmitProofRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 2;
   */
  blockNumber: bigint;

  /**
   * should be sorted
   *
   * @generated from field: repeated uint64 sequences = 3;
   */
  sequences: bigint[];

  /**
   * optional
   *
   * @generated from field: repeated uint64 merged_sequences_1 = 4;
   */
  mergedSequences1: bigint[];

  /**
   * optional
   *
   * @generated from field: repeated uint64 merged_sequences_2 = 5;
   */
  mergedSequences2: bigint[];

  /**
   * @generated from field: string job_id = 6;
   */
  jobId: string;

  /**
   * @generated from field: string proof = 7;
   */
  proof: string;

  /**
   * in milliseconds
   *
   * @generated from field: uint64 cpu_time = 8;
   */
  cpuTime: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.SubmitProofRequest.
 * Use `create(SubmitProofRequestSchema)` to create a new message.
 */
export const SubmitProofRequestSchema: GenMessage<SubmitProofRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 9);

/**
 * Response message for proof submission
 *
 * @generated from message silvana.coordinator.v1.SubmitProofResponse
 */
export type SubmitProofResponse = Message<"silvana.coordinator.v1.SubmitProofResponse"> & {
  /**
   * @generated from field: string tx_hash = 1;
   */
  txHash: string;

  /**
   * @generated from field: string da_hash = 2;
   */
  daHash: string;
};

/**
 * Describes the message silvana.coordinator.v1.SubmitProofResponse.
 * Use `create(SubmitProofResponseSchema)` to create a new message.
 */
export const SubmitProofResponseSchema: GenMessage<SubmitProofResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 10);

/**
 * Request message for submitting state
 *
 * @generated from message silvana.coordinator.v1.SubmitStateRequest
 */
export type SubmitStateRequest = Message<"silvana.coordinator.v1.SubmitStateRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 sequence = 2;
   */
  sequence: bigint;

  /**
   * @generated from field: string job_id = 3;
   */
  jobId: string;

  /**
   * raw state data (vector<u8>) for update_state_for_sequence
   *
   * @generated from field: optional bytes new_state_data = 4;
   */
  newStateData?: Uint8Array;

  /**
   * serialized state data (string) to write to Walrus
   *
   * @generated from field: optional string serialized_state = 5;
   */
  serializedState?: string;
};

/**
 * Describes the message silvana.coordinator.v1.SubmitStateRequest.
 * Use `create(SubmitStateRequestSchema)` to create a new message.
 */
export const SubmitStateRequestSchema: GenMessage<SubmitStateRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 11);

/**
 * Response message for state submission
 *
 * @generated from message silvana.coordinator.v1.SubmitStateResponse
 */
export type SubmitStateResponse = Message<"silvana.coordinator.v1.SubmitStateResponse"> & {
  /**
   * @generated from field: string tx_hash = 1;
   */
  txHash: string;

  /**
   * only present if serialized_state was provided
   *
   * @generated from field: optional string da_hash = 2;
   */
  daHash?: string;
};

/**
 * Describes the message silvana.coordinator.v1.SubmitStateResponse.
 * Use `create(SubmitStateResponseSchema)` to create a new message.
 */
export const SubmitStateResponseSchema: GenMessage<SubmitStateResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 12);

/**
 * Sequence state message matching the Move SequenceState struct
 *
 * @generated from message silvana.coordinator.v1.SequenceState
 */
export type SequenceState = Message<"silvana.coordinator.v1.SequenceState"> & {
  /**
   * @generated from field: uint64 sequence = 1;
   */
  sequence: bigint;

  /**
   * @generated from field: optional bytes state = 2;
   */
  state?: Uint8Array;

  /**
   * @generated from field: optional string data_availability = 3;
   */
  dataAvailability?: string;

  /**
   * @generated from field: bytes optimistic_state = 4;
   */
  optimisticState: Uint8Array;

  /**
   * @generated from field: bytes transition_data = 5;
   */
  transitionData: Uint8Array;
};

/**
 * Describes the message silvana.coordinator.v1.SequenceState.
 * Use `create(SequenceStateSchema)` to create a new message.
 */
export const SequenceStateSchema: GenMessage<SequenceState> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 13);

/**
 * Request message for querying sequence states
 *
 * @generated from message silvana.coordinator.v1.GetSequenceStatesRequest
 */
export type GetSequenceStatesRequest = Message<"silvana.coordinator.v1.GetSequenceStatesRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string job_id = 2;
   */
  jobId: string;

  /**
   * @generated from field: uint64 sequence = 3;
   */
  sequence: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.GetSequenceStatesRequest.
 * Use `create(GetSequenceStatesRequestSchema)` to create a new message.
 */
export const GetSequenceStatesRequestSchema: GenMessage<GetSequenceStatesRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 14);

/**
 * Response message for sequence states query
 *
 * @generated from message silvana.coordinator.v1.GetSequenceStatesResponse
 */
export type GetSequenceStatesResponse = Message<"silvana.coordinator.v1.GetSequenceStatesResponse"> & {
  /**
   * @generated from field: repeated silvana.coordinator.v1.SequenceState states = 1;
   */
  states: SequenceState[];
};

/**
 * Describes the message silvana.coordinator.v1.GetSequenceStatesResponse.
 * Use `create(GetSequenceStatesResponseSchema)` to create a new message.
 */
export const GetSequenceStatesResponseSchema: GenMessage<GetSequenceStatesResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 15);

/**
 * Request message for reading data availability by hash
 *
 * @generated from message silvana.coordinator.v1.ReadDataAvailabilityRequest
 */
export type ReadDataAvailabilityRequest = Message<"silvana.coordinator.v1.ReadDataAvailabilityRequest"> & {
  /**
   * @generated from field: string da_hash = 1;
   */
  daHash: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message silvana.coordinator.v1.ReadDataAvailabilityRequest.
 * Use `create(ReadDataAvailabilityRequestSchema)` to create a new message.
 */
export const ReadDataAvailabilityRequestSchema: GenMessage<ReadDataAvailabilityRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 16);

/**
 * Response message for data availability read
 *
 * @generated from message silvana.coordinator.v1.ReadDataAvailabilityResponse
 */
export type ReadDataAvailabilityResponse = Message<"silvana.coordinator.v1.ReadDataAvailabilityResponse"> & {
  /**
   * @generated from field: optional string data = 1;
   */
  data?: string;

  /**
   * @generated from field: bool success = 2;
   */
  success: boolean;

  /**
   * @generated from field: string message = 3;
   */
  message: string;
};

/**
 * Describes the message silvana.coordinator.v1.ReadDataAvailabilityResponse.
 * Use `create(ReadDataAvailabilityResponseSchema)` to create a new message.
 */
export const ReadDataAvailabilityResponseSchema: GenMessage<ReadDataAvailabilityResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 17);

/**
 * Request message for getting a proof
 *
 * @generated from message silvana.coordinator.v1.GetProofRequest
 */
export type GetProofRequest = Message<"silvana.coordinator.v1.GetProofRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 2;
   */
  blockNumber: bigint;

  /**
   * should be sorted
   *
   * @generated from field: repeated uint64 sequences = 3;
   */
  sequences: bigint[];

  /**
   * @generated from field: string job_id = 4;
   */
  jobId: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetProofRequest.
 * Use `create(GetProofRequestSchema)` to create a new message.
 */
export const GetProofRequestSchema: GenMessage<GetProofRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 18);

/**
 * Response message for getting a proof
 *
 * @generated from message silvana.coordinator.v1.GetProofResponse
 */
export type GetProofResponse = Message<"silvana.coordinator.v1.GetProofResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * available when success is true
   *
   * @generated from field: optional string proof = 2;
   */
  proof?: string;

  /**
   * available when success is false
   *
   * @generated from field: optional string message = 3;
   */
  message?: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetProofResponse.
 * Use `create(GetProofResponseSchema)` to create a new message.
 */
export const GetProofResponseSchema: GenMessage<GetProofResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 19);

/**
 * Request message for getting a block proof
 *
 * @generated from message silvana.coordinator.v1.GetBlockProofRequest
 */
export type GetBlockProofRequest = Message<"silvana.coordinator.v1.GetBlockProofRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 2;
   */
  blockNumber: bigint;

  /**
   * @generated from field: string job_id = 3;
   */
  jobId: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetBlockProofRequest.
 * Use `create(GetBlockProofRequestSchema)` to create a new message.
 */
export const GetBlockProofRequestSchema: GenMessage<GetBlockProofRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 20);

/**
 * Response message for getting a block proof
 *
 * @generated from message silvana.coordinator.v1.GetBlockProofResponse
 */
export type GetBlockProofResponse = Message<"silvana.coordinator.v1.GetBlockProofResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * available when success is true
   *
   * @generated from field: optional string block_proof = 2;
   */
  blockProof?: string;

  /**
   * available when success is false
   *
   * @generated from field: optional string message = 3;
   */
  message?: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetBlockProofResponse.
 * Use `create(GetBlockProofResponseSchema)` to create a new message.
 */
export const GetBlockProofResponseSchema: GenMessage<GetBlockProofResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 21);

/**
 * Request message for retrieving a secret
 *
 * @generated from message silvana.coordinator.v1.RetrieveSecretRequest
 */
export type RetrieveSecretRequest = Message<"silvana.coordinator.v1.RetrieveSecretRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;
};

/**
 * Describes the message silvana.coordinator.v1.RetrieveSecretRequest.
 * Use `create(RetrieveSecretRequestSchema)` to create a new message.
 */
export const RetrieveSecretRequestSchema: GenMessage<RetrieveSecretRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 22);

/**
 * Response message for secret retrieval
 *
 * @generated from message silvana.coordinator.v1.RetrieveSecretResponse
 */
export type RetrieveSecretResponse = Message<"silvana.coordinator.v1.RetrieveSecretResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * Only returned if success is true
   *
   * @generated from field: optional string secret_value = 3;
   */
  secretValue?: string;
};

/**
 * Describes the message silvana.coordinator.v1.RetrieveSecretResponse.
 * Use `create(RetrieveSecretResponseSchema)` to create a new message.
 */
export const RetrieveSecretResponseSchema: GenMessage<RetrieveSecretResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 23);

/**
 * gRPC service definition
 *
 * @generated from service silvana.coordinator.v1.CoordinatorService
 */
export const CoordinatorService: GenService<{
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.GetJob
   */
  getJob: {
    methodKind: "unary";
    input: typeof GetJobRequestSchema;
    output: typeof GetJobResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.CompleteJob
   */
  completeJob: {
    methodKind: "unary";
    input: typeof CompleteJobRequestSchema;
    output: typeof CompleteJobResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.FailJob
   */
  failJob: {
    methodKind: "unary";
    input: typeof FailJobRequestSchema;
    output: typeof FailJobResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.TerminateJob
   */
  terminateJob: {
    methodKind: "unary";
    input: typeof TerminateJobRequestSchema;
    output: typeof TerminateJobResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.SubmitProof
   */
  submitProof: {
    methodKind: "unary";
    input: typeof SubmitProofRequestSchema;
    output: typeof SubmitProofResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.SubmitState
   */
  submitState: {
    methodKind: "unary";
    input: typeof SubmitStateRequestSchema;
    output: typeof SubmitStateResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.GetSequenceStates
   */
  getSequenceStates: {
    methodKind: "unary";
    input: typeof GetSequenceStatesRequestSchema;
    output: typeof GetSequenceStatesResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.ReadDataAvailability
   */
  readDataAvailability: {
    methodKind: "unary";
    input: typeof ReadDataAvailabilityRequestSchema;
    output: typeof ReadDataAvailabilityResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.GetProof
   */
  getProof: {
    methodKind: "unary";
    input: typeof GetProofRequestSchema;
    output: typeof GetProofResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.GetBlockProof
   */
  getBlockProof: {
    methodKind: "unary";
    input: typeof GetBlockProofRequestSchema;
    output: typeof GetBlockProofResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.RetrieveSecret
   */
  retrieveSecret: {
    methodKind: "unary";
    input: typeof RetrieveSecretRequestSchema;
    output: typeof RetrieveSecretResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_silvana_coordinator_v1_coordinator, 0);

