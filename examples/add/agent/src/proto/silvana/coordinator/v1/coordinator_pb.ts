// @generated by protoc-gen-es v2.7.0 with parameter "target=ts,js_import_style=module"
// @generated from file silvana/coordinator/v1/coordinator.proto (package silvana.coordinator.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file silvana/coordinator/v1/coordinator.proto.
 */
export const file_silvana_coordinator_v1_coordinator: GenFile = /*@__PURE__*/
  fileDesc("CihzaWx2YW5hL2Nvb3JkaW5hdG9yL3YxL2Nvb3JkaW5hdG9yLnByb3RvEhZzaWx2YW5hLmNvb3JkaW5hdG9yLnYxIqgCCgNKb2ISFAoMam9iX3NlcXVlbmNlGAEgASgEEhgKC2Rlc2NyaXB0aW9uGAIgASgJSACIAQESEQoJZGV2ZWxvcGVyGAMgASgJEg0KBWFnZW50GAQgASgJEhQKDGFnZW50X21ldGhvZBgFIAEoCRILCgNhcHAYBiABKAkSFAoMYXBwX2luc3RhbmNlGAcgASgJEhsKE2FwcF9pbnN0YW5jZV9tZXRob2QYCCABKAkSEQoJc2VxdWVuY2VzGAkgAygEEgwKBGRhdGEYCiABKAwSDgoGam9iX2lkGAsgASgJEhAKCGF0dGVtcHRzGAwgASgNEhIKCmNyZWF0ZWRfYXQYDSABKAQSEgoKdXBkYXRlZF9hdBgOIAEoBEIOCgxfZGVzY3JpcHRpb24iWwoNR2V0Sm9iUmVxdWVzdBIRCglkZXZlbG9wZXIYASABKAkSDQoFYWdlbnQYAiABKAkSFAoMYWdlbnRfbWV0aG9kGAMgASgJEhIKCnNlc3Npb25faWQYBCABKAkiRwoOR2V0Sm9iUmVzcG9uc2USLQoDam9iGAEgASgLMhsuc2lsdmFuYS5jb29yZGluYXRvci52MS5Kb2JIAIgBAUIGCgRfam9iIjgKEkNvbXBsZXRlSm9iUmVxdWVzdBIOCgZqb2JfaWQYASABKAkSEgoKc2Vzc2lvbl9pZBgCIAEoCSI3ChNDb21wbGV0ZUpvYlJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSDwoHbWVzc2FnZRgCIAEoCSJLCg5GYWlsSm9iUmVxdWVzdBIOCgZqb2JfaWQYASABKAkSFQoNZXJyb3JfbWVzc2FnZRgCIAEoCRISCgpzZXNzaW9uX2lkGAMgASgJIjMKD0ZhaWxKb2JSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEg8KB21lc3NhZ2UYAiABKAkiugEKElN1Ym1pdFByb29mUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgJEhQKDGJsb2NrX251bWJlchgCIAEoBBIRCglzZXF1ZW5jZXMYAyADKAQSGgoSbWVyZ2VkX3NlcXVlbmNlc18xGAQgAygEEhoKEm1lcmdlZF9zZXF1ZW5jZXNfMhgFIAMoBBIOCgZqb2JfaWQYBiABKAkSDQoFcHJvb2YYByABKAkSEAoIY3B1X3RpbWUYCCABKAQiNwoTU3VibWl0UHJvb2ZSZXNwb25zZRIPCgd0eF9oYXNoGAEgASgJEg8KB2RhX2hhc2gYAiABKAkiqAEKDVNlcXVlbmNlU3RhdGUSEAoIc2VxdWVuY2UYASABKAQSEgoFc3RhdGUYAiABKAxIAIgBARIeChFkYXRhX2F2YWlsYWJpbGl0eRgDIAEoCUgBiAEBEhgKEG9wdGltaXN0aWNfc3RhdGUYBCABKAwSFwoPdHJhbnNpdGlvbl9kYXRhGAUgASgMQggKBl9zdGF0ZUIUChJfZGF0YV9hdmFpbGFiaWxpdHkiUAoYR2V0U2VxdWVuY2VTdGF0ZXNSZXF1ZXN0EhIKCnNlc3Npb25faWQYASABKAkSDgoGam9iX2lkGAIgASgJEhAKCHNlcXVlbmNlGAMgASgEIlIKGUdldFNlcXVlbmNlU3RhdGVzUmVzcG9uc2USNQoGc3RhdGVzGAEgAygLMiUuc2lsdmFuYS5jb29yZGluYXRvci52MS5TZXF1ZW5jZVN0YXRlIkIKG1JlYWREYXRhQXZhaWxhYmlsaXR5UmVxdWVzdBIPCgdkYV9oYXNoGAEgASgJEhIKCnNlc3Npb25faWQYAiABKAkiXAocUmVhZERhdGFBdmFpbGFiaWxpdHlSZXNwb25zZRIRCgRkYXRhGAEgASgJSACIAQESDwoHc3VjY2VzcxgCIAEoCBIPCgdtZXNzYWdlGAMgASgJQgcKBV9kYXRhMpcFChJDb29yZGluYXRvclNlcnZpY2USVwoGR2V0Sm9iEiUuc2lsdmFuYS5jb29yZGluYXRvci52MS5HZXRKb2JSZXF1ZXN0GiYuc2lsdmFuYS5jb29yZGluYXRvci52MS5HZXRKb2JSZXNwb25zZRJmCgtDb21wbGV0ZUpvYhIqLnNpbHZhbmEuY29vcmRpbmF0b3IudjEuQ29tcGxldGVKb2JSZXF1ZXN0Gisuc2lsdmFuYS5jb29yZGluYXRvci52MS5Db21wbGV0ZUpvYlJlc3BvbnNlEloKB0ZhaWxKb2ISJi5zaWx2YW5hLmNvb3JkaW5hdG9yLnYxLkZhaWxKb2JSZXF1ZXN0Gicuc2lsdmFuYS5jb29yZGluYXRvci52MS5GYWlsSm9iUmVzcG9uc2USZgoLU3VibWl0UHJvb2YSKi5zaWx2YW5hLmNvb3JkaW5hdG9yLnYxLlN1Ym1pdFByb29mUmVxdWVzdBorLnNpbHZhbmEuY29vcmRpbmF0b3IudjEuU3VibWl0UHJvb2ZSZXNwb25zZRJ4ChFHZXRTZXF1ZW5jZVN0YXRlcxIwLnNpbHZhbmEuY29vcmRpbmF0b3IudjEuR2V0U2VxdWVuY2VTdGF0ZXNSZXF1ZXN0GjEuc2lsdmFuYS5jb29yZGluYXRvci52MS5HZXRTZXF1ZW5jZVN0YXRlc1Jlc3BvbnNlEoEBChRSZWFkRGF0YUF2YWlsYWJpbGl0eRIzLnNpbHZhbmEuY29vcmRpbmF0b3IudjEuUmVhZERhdGFBdmFpbGFiaWxpdHlSZXF1ZXN0GjQuc2lsdmFuYS5jb29yZGluYXRvci52MS5SZWFkRGF0YUF2YWlsYWJpbGl0eVJlc3BvbnNlQkNaQWdpdGh1Yi5jb20vU2lsdmFuYU9uZS96ay10ZXN0cy9wYWNrYWdlcy9hdnMvcnBjL3Byb3RvO2Nvb3JkaW5hdG9yYgZwcm90bzM", [file_google_protobuf_descriptor]);

/**
 * Job message matching the partial Move struct
 *
 * @generated from message silvana.coordinator.v1.Job
 */
export type Job = Message<"silvana.coordinator.v1.Job"> & {
  /**
   * @generated from field: uint64 job_sequence = 1;
   */
  jobSequence: bigint;

  /**
   * @generated from field: optional string description = 2;
   */
  description?: string;

  /**
   * Metadata of the agent method to call
   *
   * @generated from field: string developer = 3;
   */
  developer: string;

  /**
   * @generated from field: string agent = 4;
   */
  agent: string;

  /**
   * @generated from field: string agent_method = 5;
   */
  agentMethod: string;

  /**
   * Metadata of the calling app instance
   *
   * @generated from field: string app = 6;
   */
  app: string;

  /**
   * @generated from field: string app_instance = 7;
   */
  appInstance: string;

  /**
   * @generated from field: string app_instance_method = 8;
   */
  appInstanceMethod: string;

  /**
   * @generated from field: repeated uint64 sequences = 9;
   */
  sequences: bigint[];

  /**
   * @generated from field: bytes data = 10;
   */
  data: Uint8Array;

  /**
   * Generated unique job ID for agent reference
   *
   * @generated from field: string job_id = 11;
   */
  jobId: string;

  /**
   * Metadata of the job
   *
   * @generated from field: uint32 attempts = 12;
   */
  attempts: number;

  /**
   * Metadata of the job
   *
   * @generated from field: uint64 created_at = 13;
   */
  createdAt: bigint;

  /**
   * @generated from field: uint64 updated_at = 14;
   */
  updatedAt: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.Job.
 * Use `create(JobSchema)` to create a new message.
 */
export const JobSchema: GenMessage<Job> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 0);

/**
 * Request message for getting a job
 *
 * @generated from message silvana.coordinator.v1.GetJobRequest
 */
export type GetJobRequest = Message<"silvana.coordinator.v1.GetJobRequest"> & {
  /**
   * @generated from field: string developer = 1;
   */
  developer: string;

  /**
   * @generated from field: string agent = 2;
   */
  agent: string;

  /**
   * @generated from field: string agent_method = 3;
   */
  agentMethod: string;

  /**
   * @generated from field: string session_id = 4;
   */
  sessionId: string;
};

/**
 * Describes the message silvana.coordinator.v1.GetJobRequest.
 * Use `create(GetJobRequestSchema)` to create a new message.
 */
export const GetJobRequestSchema: GenMessage<GetJobRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 1);

/**
 * Response message containing a job
 *
 * @generated from message silvana.coordinator.v1.GetJobResponse
 */
export type GetJobResponse = Message<"silvana.coordinator.v1.GetJobResponse"> & {
  /**
   * @generated from field: optional silvana.coordinator.v1.Job job = 1;
   */
  job?: Job;
};

/**
 * Describes the message silvana.coordinator.v1.GetJobResponse.
 * Use `create(GetJobResponseSchema)` to create a new message.
 */
export const GetJobResponseSchema: GenMessage<GetJobResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 2);

/**
 * Request message for completing a job
 *
 * @generated from message silvana.coordinator.v1.CompleteJobRequest
 */
export type CompleteJobRequest = Message<"silvana.coordinator.v1.CompleteJobRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message silvana.coordinator.v1.CompleteJobRequest.
 * Use `create(CompleteJobRequestSchema)` to create a new message.
 */
export const CompleteJobRequestSchema: GenMessage<CompleteJobRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 3);

/**
 * Response message for job completion
 *
 * @generated from message silvana.coordinator.v1.CompleteJobResponse
 */
export type CompleteJobResponse = Message<"silvana.coordinator.v1.CompleteJobResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message silvana.coordinator.v1.CompleteJobResponse.
 * Use `create(CompleteJobResponseSchema)` to create a new message.
 */
export const CompleteJobResponseSchema: GenMessage<CompleteJobResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 4);

/**
 * Request message for failing a job
 *
 * @generated from message silvana.coordinator.v1.FailJobRequest
 */
export type FailJobRequest = Message<"silvana.coordinator.v1.FailJobRequest"> & {
  /**
   * @generated from field: string job_id = 1;
   */
  jobId: string;

  /**
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;

  /**
   * @generated from field: string session_id = 3;
   */
  sessionId: string;
};

/**
 * Describes the message silvana.coordinator.v1.FailJobRequest.
 * Use `create(FailJobRequestSchema)` to create a new message.
 */
export const FailJobRequestSchema: GenMessage<FailJobRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 5);

/**
 * Response message for job failure
 *
 * @generated from message silvana.coordinator.v1.FailJobResponse
 */
export type FailJobResponse = Message<"silvana.coordinator.v1.FailJobResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message silvana.coordinator.v1.FailJobResponse.
 * Use `create(FailJobResponseSchema)` to create a new message.
 */
export const FailJobResponseSchema: GenMessage<FailJobResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 6);

/**
 * Request message for submitting a proof
 *
 * @generated from message silvana.coordinator.v1.SubmitProofRequest
 */
export type SubmitProofRequest = Message<"silvana.coordinator.v1.SubmitProofRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: uint64 block_number = 2;
   */
  blockNumber: bigint;

  /**
   * should be sorted
   *
   * @generated from field: repeated uint64 sequences = 3;
   */
  sequences: bigint[];

  /**
   * optional
   *
   * @generated from field: repeated uint64 merged_sequences_1 = 4;
   */
  mergedSequences1: bigint[];

  /**
   * optional
   *
   * @generated from field: repeated uint64 merged_sequences_2 = 5;
   */
  mergedSequences2: bigint[];

  /**
   * @generated from field: string job_id = 6;
   */
  jobId: string;

  /**
   * @generated from field: string proof = 7;
   */
  proof: string;

  /**
   * in milliseconds
   *
   * @generated from field: uint64 cpu_time = 8;
   */
  cpuTime: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.SubmitProofRequest.
 * Use `create(SubmitProofRequestSchema)` to create a new message.
 */
export const SubmitProofRequestSchema: GenMessage<SubmitProofRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 7);

/**
 * Response message for proof submission
 *
 * @generated from message silvana.coordinator.v1.SubmitProofResponse
 */
export type SubmitProofResponse = Message<"silvana.coordinator.v1.SubmitProofResponse"> & {
  /**
   * @generated from field: string tx_hash = 1;
   */
  txHash: string;

  /**
   * @generated from field: string da_hash = 2;
   */
  daHash: string;
};

/**
 * Describes the message silvana.coordinator.v1.SubmitProofResponse.
 * Use `create(SubmitProofResponseSchema)` to create a new message.
 */
export const SubmitProofResponseSchema: GenMessage<SubmitProofResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 8);

/**
 * Sequence state message matching the Move SequenceState struct
 *
 * @generated from message silvana.coordinator.v1.SequenceState
 */
export type SequenceState = Message<"silvana.coordinator.v1.SequenceState"> & {
  /**
   * @generated from field: uint64 sequence = 1;
   */
  sequence: bigint;

  /**
   * @generated from field: optional bytes state = 2;
   */
  state?: Uint8Array;

  /**
   * @generated from field: optional string data_availability = 3;
   */
  dataAvailability?: string;

  /**
   * @generated from field: bytes optimistic_state = 4;
   */
  optimisticState: Uint8Array;

  /**
   * @generated from field: bytes transition_data = 5;
   */
  transitionData: Uint8Array;
};

/**
 * Describes the message silvana.coordinator.v1.SequenceState.
 * Use `create(SequenceStateSchema)` to create a new message.
 */
export const SequenceStateSchema: GenMessage<SequenceState> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 9);

/**
 * Request message for querying sequence states
 *
 * @generated from message silvana.coordinator.v1.GetSequenceStatesRequest
 */
export type GetSequenceStatesRequest = Message<"silvana.coordinator.v1.GetSequenceStatesRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string job_id = 2;
   */
  jobId: string;

  /**
   * @generated from field: uint64 sequence = 3;
   */
  sequence: bigint;
};

/**
 * Describes the message silvana.coordinator.v1.GetSequenceStatesRequest.
 * Use `create(GetSequenceStatesRequestSchema)` to create a new message.
 */
export const GetSequenceStatesRequestSchema: GenMessage<GetSequenceStatesRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 10);

/**
 * Response message for sequence states query
 *
 * @generated from message silvana.coordinator.v1.GetSequenceStatesResponse
 */
export type GetSequenceStatesResponse = Message<"silvana.coordinator.v1.GetSequenceStatesResponse"> & {
  /**
   * @generated from field: repeated silvana.coordinator.v1.SequenceState states = 1;
   */
  states: SequenceState[];
};

/**
 * Describes the message silvana.coordinator.v1.GetSequenceStatesResponse.
 * Use `create(GetSequenceStatesResponseSchema)` to create a new message.
 */
export const GetSequenceStatesResponseSchema: GenMessage<GetSequenceStatesResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 11);

/**
 * Request message for reading data availability by hash
 *
 * @generated from message silvana.coordinator.v1.ReadDataAvailabilityRequest
 */
export type ReadDataAvailabilityRequest = Message<"silvana.coordinator.v1.ReadDataAvailabilityRequest"> & {
  /**
   * @generated from field: string da_hash = 1;
   */
  daHash: string;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;
};

/**
 * Describes the message silvana.coordinator.v1.ReadDataAvailabilityRequest.
 * Use `create(ReadDataAvailabilityRequestSchema)` to create a new message.
 */
export const ReadDataAvailabilityRequestSchema: GenMessage<ReadDataAvailabilityRequest> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 12);

/**
 * Response message for data availability read
 *
 * @generated from message silvana.coordinator.v1.ReadDataAvailabilityResponse
 */
export type ReadDataAvailabilityResponse = Message<"silvana.coordinator.v1.ReadDataAvailabilityResponse"> & {
  /**
   * @generated from field: optional string data = 1;
   */
  data?: string;

  /**
   * @generated from field: bool success = 2;
   */
  success: boolean;

  /**
   * @generated from field: string message = 3;
   */
  message: string;
};

/**
 * Describes the message silvana.coordinator.v1.ReadDataAvailabilityResponse.
 * Use `create(ReadDataAvailabilityResponseSchema)` to create a new message.
 */
export const ReadDataAvailabilityResponseSchema: GenMessage<ReadDataAvailabilityResponse> = /*@__PURE__*/
  messageDesc(file_silvana_coordinator_v1_coordinator, 13);

/**
 * gRPC service definition
 *
 * @generated from service silvana.coordinator.v1.CoordinatorService
 */
export const CoordinatorService: GenService<{
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.GetJob
   */
  getJob: {
    methodKind: "unary";
    input: typeof GetJobRequestSchema;
    output: typeof GetJobResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.CompleteJob
   */
  completeJob: {
    methodKind: "unary";
    input: typeof CompleteJobRequestSchema;
    output: typeof CompleteJobResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.FailJob
   */
  failJob: {
    methodKind: "unary";
    input: typeof FailJobRequestSchema;
    output: typeof FailJobResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.SubmitProof
   */
  submitProof: {
    methodKind: "unary";
    input: typeof SubmitProofRequestSchema;
    output: typeof SubmitProofResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.GetSequenceStates
   */
  getSequenceStates: {
    methodKind: "unary";
    input: typeof GetSequenceStatesRequestSchema;
    output: typeof GetSequenceStatesResponseSchema;
  },
  /**
   * @generated from rpc silvana.coordinator.v1.CoordinatorService.ReadDataAvailability
   */
  readDataAvailability: {
    methodKind: "unary";
    input: typeof ReadDataAvailabilityRequestSchema;
    output: typeof ReadDataAvailabilityResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_silvana_coordinator_v1_coordinator, 0);

